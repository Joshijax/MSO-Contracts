{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "InsufficientPermission",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "OperatorSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "isOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setOperator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "supported",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"InsufficientBalance(address,uint256)": [
					{
						"details": "Thrown when owner balance for id is insufficient.",
						"params": {
							"id": "The id of the token.",
							"owner": "The address of the owner."
						}
					}
				],
				"InsufficientPermission(address,uint256)": [
					{
						"details": "Thrown when spender allowance for id is insufficient.",
						"params": {
							"id": "The id of the token.",
							"spender": "The address of the spender."
						}
					}
				]
			},
			"events": {
				"Approval(address,address,uint256,uint256)": {
					"params": {
						"amount": "The amount of the token.",
						"id": "The id of the token.",
						"owner": "The address of the owner.",
						"spender": "The address of the spender."
					}
				},
				"OperatorSet(address,address,bool)": {
					"params": {
						"approved": "The approval status.",
						"owner": "The address of the owner.",
						"spender": "The address of the spender."
					}
				},
				"Transfer(address,address,uint256,uint256)": {
					"params": {
						"amount": "The amount of the token.",
						"id": "The id of the token.",
						"receiver": "The address of the receiver.",
						"sender": "The address of the sender."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"approve(address,uint256,uint256)": {
					"params": {
						"amount": "The amount of the token.",
						"id": "The id of the token.",
						"spender": "The address of the spender."
					}
				},
				"setOperator(address,bool)": {
					"params": {
						"approved": "The approval status.",
						"spender": "The address of the spender."
					}
				},
				"supportsInterface(bytes4)": {
					"params": {
						"interfaceId": "The interface identifier, as specified in ERC-165."
					},
					"returns": {
						"supported": "True if the contract implements `interfaceId` and"
					}
				},
				"transfer(address,uint256,uint256)": {
					"params": {
						"amount": "The amount of the token.",
						"id": "The id of the token.",
						"receiver": "The address of the receiver."
					}
				},
				"transferFrom(address,address,uint256,uint256)": {
					"params": {
						"amount": "The amount of the token.",
						"id": "The id of the token.",
						"receiver": "The address of the receiver.",
						"sender": "The address of the sender."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Approval(address,address,uint256,uint256)": {
					"notice": "The event emitted when an approval occurs."
				},
				"OperatorSet(address,address,bool)": {
					"notice": "The event emitted when an operator is set."
				},
				"Transfer(address,address,uint256,uint256)": {
					"notice": "The event emitted when a transfer occurs."
				}
			},
			"kind": "user",
			"methods": {
				"allowance(address,address,uint256)": {
					"notice": "Spender allowance of an id."
				},
				"approve(address,uint256,uint256)": {
					"notice": "Approves an amount of an id to a spender."
				},
				"balanceOf(address,uint256)": {
					"notice": "Owner balance of an id."
				},
				"isOperator(address,address)": {
					"notice": "Checks if a spender is approved by an owner as an operator."
				},
				"setOperator(address,bool)": {
					"notice": "Sets or unsets a spender as an operator for the caller."
				},
				"supportsInterface(bytes4)": {
					"notice": "Checks if a contract implements an interface."
				},
				"totalSupply(uint256)": {
					"notice": "The total supply of each id."
				},
				"transfer(address,uint256,uint256)": {
					"notice": "Transfers an amount of an id from the caller to a receiver."
				},
				"transferFrom(address,address,uint256,uint256)": {
					"notice": "Transfers an amount of an id from a sender to a receiver."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ERC6909.sol": "ERC6909"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"contracts/ERC6909.sol": {
			"keccak256": "0xd259904c5b4b4ad3604559b7d893f16e72d71404811588121cadba204f52f30d",
			"license": "MIT",
			"urls": [
				"bzz-raw://36f41cbd374d9dd0bef861c4ce52453bbebdc4281763f79caaf3c737e8f5e8ca",
				"dweb:/ipfs/QmbQiSTXVU6SyZcRC3PBZpBg49c8WtAUKE8JNCSsQKmyb9"
			]
		},
		"contracts/IERC6909.sol": {
			"keccak256": "0x26affd11837ef75d256e18d9df931281cec061b4bc06be3d77da3c347442c2fd",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8acb575710cc587ba6c9cf5e21d260104055bd6ec58e200011bc2caaf76ae3e",
				"dweb:/ipfs/QmR4oizruSqaM2E7qjb1hEe5L7k36TcUZ7dVGPt7ASU3rj"
			]
		}
	},
	"version": 1
}